[{"/home/kenyada/#portfolio_projects/nflx/src/index.js":"1","/home/kenyada/#portfolio_projects/nflx/src/reportWebVitals.js":"2","/home/kenyada/#portfolio_projects/nflx/src/App.js":"3","/home/kenyada/#portfolio_projects/nflx/src/components/Row.js":"4","/home/kenyada/#portfolio_projects/nflx/src/requests.js":"5","/home/kenyada/#portfolio_projects/nflx/src/axios.js":"6","/home/kenyada/#portfolio_projects/nflx/src/components/Banner.js":"7","/home/kenyada/#portfolio_projects/nflx/src/components/Nav.js":"8","/home/kenyada/#portfolio_projects/nflx/src/tmdb_api.js":"9"},{"size":500,"mtime":1608718037800,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1608718037800,"results":"12","hashOfConfig":"11"},{"size":923,"mtime":1608748408604,"results":"13","hashOfConfig":"11"},{"size":1743,"mtime":1608807512279,"results":"14","hashOfConfig":"11"},{"size":713,"mtime":1608808898104,"results":"15","hashOfConfig":"11"},{"size":132,"mtime":1608722434883,"results":"16","hashOfConfig":"11"},{"size":1508,"mtime":1608747921084,"results":"17","hashOfConfig":"11"},{"size":976,"mtime":1608749744451,"results":"18","hashOfConfig":"11"},{"size":56,"mtime":1608808852075,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"17rjvu5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kenyada/#portfolio_projects/nflx/src/index.js",[],["42","43"],"/home/kenyada/#portfolio_projects/nflx/src/reportWebVitals.js",[],"/home/kenyada/#portfolio_projects/nflx/src/App.js",["44"],"import logo from './logo.svg';\nimport './App.css';\nimport Row from './components/Row'\nimport requests from './requests'\nimport Banner from './components/Banner'\nimport Nav from './components/Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row title='NETFLIX ORIGINALS' isLargeRow fetchUrl={requests.fetchNetflixOriginals} />\n      <Row title='Trending Now' fetchUrl={requests.fetchTrending} />\n      <Row title='Top Rated' fetchUrl={requests.fetchTopRated} />\n      <Row title='Action Movies' fetchUrl={requests.fetchActionMovies} />\n      <Row title='Comedy Movies' fetchUrl={requests.fetchComedyMovies} />\n      <Row title='Horror Movies' fetchUrl={requests.fetchHorrorMovies} />\n      <Row title='Romance Movies' fetchUrl={requests.fetchRomanceMovies} />\n      <Row title='Documentaries' fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","/home/kenyada/#portfolio_projects/nflx/src/components/Row.js",["45","46"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"../axios\";\nimport requests from \"../requests\";\nimport './Row.css'\nimport YouTube from 'react-youtube'\nimport movieTrailer from 'movie-trailer'\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n\n  const [trailerUrl, setTrailerUrl] = useState('')\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      console.log(\"request\", movies);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  }; \n\n  const handleClick = (movie) => {\n    if(trailerUrl){\n      setTrailerUrl('')\n    } else {\n      movieTrailer(movie?.title || movie?.name || movie?.original_name || '')\n      .then((url) =>{\n        const urlParams =new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'))\n      })\n      .catch(err => console.log(err))\n    }\n  }\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n            className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\n            src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n","/home/kenyada/#portfolio_projects/nflx/src/requests.js",[],"/home/kenyada/#portfolio_projects/nflx/src/axios.js",[],"/home/kenyada/#portfolio_projects/nflx/src/components/Banner.js",["47"],"import React, { useEffect, useState } from 'react'\nimport axios from '../axios'\nimport requests from '../requests'\nimport './Banner.css'\n\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length -1)])\n            console.log('themovie',movie)\n        }\n        fetchData();\n    },[]);\n\n    function truncate(str, n){\n        return (str?.length > n) ? str.substr(0, n-1) + '...' : str;\n      };\n\n    return (\n        <header className='banner' style={{\n            backgroundSize: 'cover',\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition: 'center center',\n        }} >\n            <div className='banner__contents'>\n                <h1 className='banner__title' >{movie?.title || movie?.name || movie?.original_name}</h1>\n                <div className='banner__buttons'>\n                    <button className=\"banner__button\">Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n\n                <h1 className=\"banner__description\">\n                    {truncate(movie?.overview,150)}\n                </h1>\n            </div>\n\n            <div className=\"banner--fadeBottom\"></div>\n        </header>\n    )\n}\n\nexport default Banner\n","/home/kenyada/#portfolio_projects/nflx/src/components/Nav.js",[],"/home/kenyada/#portfolio_projects/nflx/src/tmdb_api.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":23,"column":6,"nodeType":"59","endLine":23,"endColumn":16,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":16,"column":7,"nodeType":"59","endLine":16,"endColumn":9,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'requests' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.","ArrayExpression",["65"],"React Hook useEffect has a missing dependency: 'movie'. Either include it or remove the dependency array.",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [fetchUrl, movies]",{"range":"71","text":"72"},"Update the dependencies array to be: [movie]",{"range":"73","text":"74"},[647,657],"[fetchUrl, movies]",[518,520],"[movie]"]